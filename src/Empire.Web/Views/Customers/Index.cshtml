@model IEnumerable<Empire.Application.DTOs.Customer.CustomerDto>
@{
    ViewData["Title"] = "Customer Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-users me-2"></i>Customer Management</h2>
    <div>
        <button type="button" class="btn btn-primary" onclick="showCreateCustomerModal()">
            <i class="fas fa-plus me-2"></i>Add New Customer
        </button>
        <button type="button" class="btn btn-info" onclick="exportCustomers()">
            <i class="fas fa-download me-2"></i>Export Customers
        </button>
    </div>
</div>

<!-- Filter Section -->
<div class="card mb-4">
    <div class="card-body">
        <h5 class="card-title">Search & Filter Customers</h5>
        <form id="customerFilterForm" class="row g-3">
            <div class="col-md-4">
                <label class="form-label">Search</label>
                <input type="text" class="form-control" id="filterSearch" placeholder="Name, phone, or email...">
            </div>
            <div class="col-md-2">
                <label class="form-label">City</label>
                <input type="text" class="form-control" id="filterCity" placeholder="Enter city">
            </div>
            <div class="col-md-2">
                <label class="form-label">State</label>
                <input type="text" class="form-control" id="filterState" placeholder="Enter state">
            </div>
            <div class="col-md-2">
                <label class="form-label">Date Range</label>
                <input type="date" class="form-control" id="filterFromDate">
            </div>
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <div class="d-grid gap-2 d-md-flex">
                    <button type="button" class="btn btn-primary" onclick="applyFilters()">
                        <i class="fas fa-search me-2"></i>Filter
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="clearFilters()">
                        <i class="fas fa-refresh me-2"></i>Clear
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Customers Table -->
<div class="card">
    <div class="card-body">
        <table id="customersTable" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Contact</th>
                    <th>Address</th>
                    <th>Created</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="customersTableBody">
                @foreach (var customer in Model)
                {
                    <tr data-customer-id="@customer.Id">
                        <td>
                            <div class="fw-bold">@customer.FirstName @customer.LastName</div>
                            <small class="text-muted">ID: @customer.Id</small>
                        </td>
                        <td>
                            <div>
                                <i class="fas fa-phone me-1"></i>@customer.Phone
                            </div>
                            @if (!string.IsNullOrEmpty(customer.Email))
                            {
                                <div>
                                    <i class="fas fa-envelope me-1"></i>@customer.Email
                                </div>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(customer.Address))
                            {
                                <div>@customer.Address</div>
                            }
                            @if (!string.IsNullOrEmpty(customer.City) || !string.IsNullOrEmpty(customer.State))
                            {
                                <small class="text-muted">@customer.City, @customer.State @customer.ZipCode</small>
                            }
                        </td>
                        <td>
                            <small>@customer.CreatedDate.ToString("MM/dd/yyyy")</small>
                        </td>
                        <td class="actions-cell">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewCustomer(@customer.Id)" title="View Details">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-warning" onclick="editCustomer(@customer.Id)" title="Edit">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-info" onclick="viewCustomerDevices(@customer.Id)" title="View Devices">
                                    <i class="fas fa-mobile-alt"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteCustomer(@customer.Id)" title="Delete">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Create Customer Modal -->
<div class="modal fade" id="createCustomerModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createCustomerForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">First Name *</label>
                                <input type="text" class="form-control" id="firstName" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Last Name *</label>
                                <input type="text" class="form-control" id="lastName" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Phone *</label>
                                <input type="tel" class="form-control" id="phone" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Email</label>
                                <input type="email" class="form-control" id="email">
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="mb-3">
                                <label class="form-label">Address</label>
                                <input type="text" class="form-control" id="address" placeholder="Street address">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label class="form-label">City</label>
                                <input type="text" class="form-control" id="city">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label class="form-label">State</label>
                                <input type="text" class="form-control" id="state">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label class="form-label">ZIP Code</label>
                                <input type="text" class="form-control" id="zipCode">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="createCustomer()">
                    <i class="fas fa-plus me-2"></i>Add Customer
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Customer Modal -->
<div class="modal fade" id="editCustomerModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="editCustomerModalBody">
                <!-- Content will be loaded dynamically -->
            </div>
        </div>
    </div>
</div>

<!-- View Customer Details Modal -->
<div class="modal fade" id="viewCustomerModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Customer Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="viewCustomerModalBody">
                <!-- Content will be loaded dynamically -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="editCustomerFromView()">
                    <i class="fas fa-edit me-2"></i>Edit Customer
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Customer Selection Modal (for device sales) -->
<div class="modal fade" id="customerSelectionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Search Customer</label>
                    <input type="text" class="form-control" id="customerSearchInput" placeholder="Type customer name or phone...">
                </div>
                <div id="customerSearchResults" class="list-group">
                    <!-- Search results will be populated here -->
                </div>
                <hr>
                <div class="text-center">
                    <button type="button" class="btn btn-success" onclick="showQuickAddCustomer()">
                        <i class="fas fa-plus me-2"></i>Add New Customer
                    </button>
                </div>
                <div id="quickAddCustomerForm" style="display: none;" class="mt-3">
                    <div class="row">
                        <div class="col-md-6">
                            <input type="text" class="form-control mb-2" id="quickFirstName" placeholder="First Name">
                        </div>
                        <div class="col-md-6">
                            <input type="text" class="form-control mb-2" id="quickLastName" placeholder="Last Name">
                        </div>
                        <div class="col-12">
                            <input type="tel" class="form-control mb-2" id="quickPhone" placeholder="Phone Number">
                        </div>
                        <div class="col-12">
                            <button type="button" class="btn btn-primary btn-sm" onclick="createQuickCustomer()">
                                Add & Select
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let customersTable;
        let selectedCustomerId = null;
        let customerSelectionCallback = null;
        
        $(document).ready(function() {
            customersTable = $('#customersTable').DataTable({
                responsive: true,
                pageLength: 25,
                order: [[3, 'desc']], // Sort by created date
                columnDefs: [
                    { orderable: false, targets: [4] } // Disable sorting on actions column
                ]
            });

            // Customer search functionality
            $('#customerSearchInput').on('input', function() {
                searchCustomers($(this).val());
            });
        });

        function showCreateCustomerModal() {
            $('#createCustomerModal').modal('show');
        }

        function createCustomer() {
            const formData = {
                FirstName: $('#firstName').val(),
                LastName: $('#lastName').val(),
                Phone: $('#phone').val(),
                Email: $('#email').val(),
                Address: $('#address').val(),
                City: $('#city').val(),
                State: $('#state').val(),
                ZipCode: $('#zipCode').val()
            };

            if (!formData.FirstName || !formData.LastName || !formData.Phone) {
                alert('Please fill in all required fields (First Name, Last Name, Phone)');
                return;
            }

            $.ajax({
                url: '@Url.Action("Create", "Customers")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    if (response.success) {
                        $('#createCustomerModal').modal('hide');
                        location.reload(); // Reload to show new customer
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('Error creating customer');
                }
            });
        }

        function editCustomer(id) {
            $.ajax({
                url: '@Url.Action("Edit", "Customers")/' + id,
                type: 'GET',
                success: function(response) {
                    if (response.success === false) {
                        alert('Error: ' + response.message);
                    } else {
                        $('#editCustomerModalBody').html(response);
                        $('#editCustomerModal').modal('show');
                    }
                },
                error: function() {
                    alert('Error loading customer details');
                }
            });
        }

        function viewCustomer(id) {
            $.ajax({
                url: '@Url.Action("GetCustomerDetails", "Customers")/' + id,
                type: 'GET',
                success: function(response) {
                    if (response.success) {
                        const customer = response.customer;
                        const html = `
                            <div class="row">
                                <div class="col-md-6">
                                    <h6>Personal Information</h6>
                                    <p><strong>Name:</strong> ${customer.firstName} ${customer.lastName}</p>
                                    <p><strong>Phone:</strong> ${customer.phone}</p>
                                    <p><strong>Email:</strong> ${customer.email || 'N/A'}</p>
                                </div>
                                <div class="col-md-6">
                                    <h6>Address Information</h6>
                                    <p><strong>Address:</strong> ${customer.address || 'N/A'}</p>
                                    <p><strong>City:</strong> ${customer.city || 'N/A'}</p>
                                    <p><strong>State:</strong> ${customer.state || 'N/A'}</p>
                                    <p><strong>ZIP:</strong> ${customer.zipCode || 'N/A'}</p>
                                </div>
                                <div class="col-12">
                                    <hr>
                                    <p><strong>Created:</strong> ${new Date(customer.createdDate).toLocaleDateString()}</p>
                                    ${customer.modifiedDate ? '<p><strong>Modified:</strong> ' + new Date(customer.modifiedDate).toLocaleDateString() + '</p>' : ''}
                                </div>
                            </div>
                        `;
                        $('#viewCustomerModalBody').html(html);
                        selectedCustomerId = id;
                        $('#viewCustomerModal').modal('show');
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('Error loading customer details');
                }
            });
        }

        function editCustomerFromView() {
            $('#viewCustomerModal').modal('hide');
            editCustomer(selectedCustomerId);
        }

        function deleteCustomer(id) {
            if (confirm('Are you sure you want to delete this customer? This action cannot be undone.')) {
                $.ajax({
                    url: '@Url.Action("Delete", "Customers")/' + id,
                    type: 'POST',
                    success: function(response) {
                        if (response.success) {
                            // Remove the row from the table
                            $('tr[data-customer-id="' + id + '"]').remove();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Error deleting customer');
                    }
                });
            }
        }

        function viewCustomerDevices(id) {
            // Redirect to devices page with customer filter
            window.location.href = '@Url.Action("Index", "Devices")?customerId=' + id;
        }

        function applyFilters() {
            const filterData = {
                SearchTerm: $('#filterSearch').val(),
                City: $('#filterCity').val(),
                State: $('#filterState').val(),
                CreatedFromDate: $('#filterFromDate').val()
            };

            $.ajax({
                url: '@Url.Action("Filter", "Customers")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(filterData),
                success: function(response) {
                    if (response.success) {
                        updateCustomersTable(response.customers);
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('Error applying filters');
                }
            });
        }

        function updateCustomersTable(customers) {
            // Clear existing table data
            customersTable.clear();
            
            // Add new data
            customers.forEach(function(customer) {
                const actions = generateActionButtons(customer);
                
                customersTable.row.add([
                    '<div class="fw-bold">' + customer.firstName + ' ' + customer.lastName + '</div><small class="text-muted">ID: ' + customer.id + '</small>',
                    '<div><i class="fas fa-phone me-1"></i>' + customer.phone + '</div>' + 
                    (customer.email ? '<div><i class="fas fa-envelope me-1"></i>' + customer.email + '</div>' : ''),
                    (customer.address ? '<div>' + customer.address + '</div>' : '') +
                    (customer.city || customer.state ? '<small class="text-muted">' + (customer.city || '') + ', ' + (customer.state || '') + ' ' + (customer.zipCode || '') + '</small>' : ''),
                    '<small>' + new Date(customer.createdDate).toLocaleDateString() + '</small>',
                    actions
                ]);
            });
            
            // Redraw the table
            customersTable.draw();
        }

        function generateActionButtons(customer) {
            return `
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewCustomer(${customer.id})" title="View Details">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-warning" onclick="editCustomer(${customer.id})" title="Edit">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-info" onclick="viewCustomerDevices(${customer.id})" title="View Devices">
                        <i class="fas fa-mobile-alt"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteCustomer(${customer.id})" title="Delete">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            `;
        }

        function clearFilters() {
            $('#customerFilterForm')[0].reset();
            location.reload();
        }

        function exportCustomers() {
            // Placeholder for export functionality
            alert('Export functionality will be implemented soon');
        }

        // Customer selection functions for device sales
        function showCustomerSelectionModal(callback) {
            customerSelectionCallback = callback;
            $('#customerSelectionModal').modal('show');
            searchCustomers(''); // Load all customers initially
        }

        function searchCustomers(searchTerm) {
            $.ajax({
                url: '@Url.Action("GetCustomersForSelection", "Customers")',
                type: 'GET',
                success: function(response) {
                    if (response.success) {
                        let filteredCustomers = response.customers;
                        if (searchTerm) {
                            filteredCustomers = response.customers.filter(c => 
                                c.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                                c.phone.includes(searchTerm)
                            );
                        }
                        displayCustomerSearchResults(filteredCustomers);
                    }
                },
                error: function() {
                    alert('Error loading customers');
                }
            });
        }

        function displayCustomerSearchResults(customers) {
            const resultsContainer = $('#customerSearchResults');
            resultsContainer.empty();

            customers.forEach(function(customer) {
                const item = $(`
                    <a href="#" class="list-group-item list-group-item-action" onclick="selectCustomer(${customer.id}, '${customer.name}')">
                        <div class="d-flex w-100 justify-content-between">
                            <h6 class="mb-1">${customer.name}</h6>
                            <small>${customer.phone}</small>
                        </div>
                        ${customer.email ? '<small>' + customer.email + '</small>' : ''}
                    </a>
                `);
                resultsContainer.append(item);
            });

            if (customers.length === 0) {
                resultsContainer.html('<div class="text-center text-muted">No customers found</div>');
            }
        }

        function selectCustomer(id, name) {
            $('#customerSelectionModal').modal('hide');
            if (customerSelectionCallback) {
                customerSelectionCallback(id, name);
            }
        }

        function showQuickAddCustomer() {
            $('#quickAddCustomerForm').show();
        }

        function createQuickCustomer() {
            const formData = {
                FirstName: $('#quickFirstName').val(),
                LastName: $('#quickLastName').val(),
                Phone: $('#quickPhone').val(),
                Email: '',
                Address: '',
                City: '',
                State: '',
                ZipCode: ''
            };

            if (!formData.FirstName || !formData.LastName || !formData.Phone) {
                alert('Please fill in all required fields');
                return;
            }

            $.ajax({
                url: '@Url.Action("Create", "Customers")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    if (response.success) {
                        selectCustomer(response.customer.id, response.customer.firstName + ' ' + response.customer.lastName);
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('Error creating customer');
                }
            });
        }

        // Global function to be called from device management
        window.showCustomerSelection = showCustomerSelectionModal;
    </script>
}


@model RepairIndexViewModel
@{
    ViewData["Title"] = "Repairs";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">
        <i class="fas fa-tools me-2"></i>
        Repair Management
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i>
                New Repair
            </a>
        </div>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Filters -->
<div class="card mb-4">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary">
            <i class="fas fa-filter me-2"></i>
            Filters
        </h6>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index">
            <div class="row">
                <div class="col-md-2 mb-3">
                    <label for="searchTerm" class="form-label">Search</label>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm"
                           value="@Model.SearchTerm" placeholder="Search repairs...">
                </div>

                <div class="col-md-2 mb-3">
                    <label for="brandFilter" class="form-label">Brand</label>
                    <select id="brandFilter" name="brandId" class="form-select">
                        <option value="">All Brands</option>
                    </select>
                </div>

                <div class="col-md-2 mb-3">
                    <label for="deviceCategoryFilter" class="form-label">Device Category</label>
                    <select id="deviceCategoryFilter" name="deviceCategoryId" class="form-select">
                        <option value="">All Categories</option>
                    </select>
                </div>

                <div class="col-md-1 mb-3">
                    <label for="status" class="form-label">Status</label>
                    <select class="form-select" id="status" name="status">
                        <option value="">All Status</option>
                        <option value="InProgress" selected="@(Model.Status == "InProgress")">In Progress</option>
                        <option value="Complete" selected="@(Model.Status == "Complete")">Complete</option>
                        <option value="PickedUp" selected="@(Model.Status == "PickedUp")">Picked Up</option>
                        <option value="WaitingForParts" selected="@(Model.Status == "WaitingForParts")">Waiting for Parts</option>
                        <option value="Diagnose" selected="@(Model.Status == "Diagnose")">Diagnose</option>
                    </select>
                </div>

                <div class="col-md-1 mb-3">
                    <label for="paymentStatus" class="form-label">Payment</label>
                    <select class="form-select" id="paymentStatus" name="paymentStatus">
                        <option value="">All Payments</option>
                        <option value="Paid" selected="@(Model.PaymentStatus == "Paid")">Paid</option>
                        <option value="Unpaid" selected="@(Model.PaymentStatus == "Unpaid")">Unpaid</option>
                    </select>
                </div>

                <div class="col-md-2 mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" class="form-control" id="startDate" name="startDate"
                           value="@Model.StartDate?.ToString("yyyy-MM-dd")">
                </div>

                <div class="col-md-2 mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" class="form-control" id="endDate" name="endDate"
                           value="@Model.EndDate?.ToString("yyyy-MM-dd")">
                </div>

                <div class="col-md-1 mb-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Repairs Table -->
<div class="card">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary">
            Repairs (@Model.Repairs.Count())
        </h6>
    </div>
    <div class="card-body">
        @if (Model.Repairs.Any())
        {
            <div class="table-responsive">
                <table id="repairsTable" class="table table-hover table-striped">
                    <thead>
                        <tr>
                            <th>Customer</th>
                            <th>Device</th>
                            <th>Issue</th>
                            <th>Repair Details</th>
                            <th>Status</th>
                            <th>Payment</th>
                            <th>Cost</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var repair in Model.Repairs)
                        {
                            <tr data-status="@repair.Status">
                                <td>
                                    <div>@repair.CustomerName</div>
                                    <small class="text-muted">@repair.CustomerPhone</small>
                                </td>
                                <td>
                                    <div>@repair.DeviceBrand @repair.DeviceModel</div>
                                    @if (!string.IsNullOrEmpty(repair.DeviceCategory))
                                    {
                                        <small class="text-muted">@repair.DeviceCategory</small>
                                    }
                                </td>
                                <td>
                                    <div>@repair.Issue</div>
                                    @if (!string.IsNullOrEmpty(repair.Description))
                                    {
                                        <small class="text-muted">@repair.Description</small>
                                    }
                                </td>
                                <td>
                                    <div class="fw-semibold">@repair.RepairNumber</div>
                                    <div class="text-muted">@repair.CreatedByUser | @repair.CreatedDate.ToString("MM/dd/yyyy HH:mm")</div>
                                </td>
                                <td>
                                    @switch (repair.Status)
                                    {
                                        case "Diagnose":
                                            <span class="badge bg-info">Diagnose</span>
                                            break;
                                        case "WaitingForParts":
                                            <span class="badge bg-warning">Waiting for Parts</span>
                                            break;
                                        case "InProgress":
                                            <span class="badge bg-primary">In Progress</span>
                                            break;
                                        case "Completed":
                                        case "Complete":
                                            <span class="badge bg-success">Complete</span>
                                            break;
                                        case "PickedUp":
                                            <span class="badge bg-success">Picked Up</span>
                                            break;
                                        case "Done":
                                            <span class="badge bg-success">Picked Up</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@repair.Status</span>
                                            break;
                                    }
                                </td>
                                <td>
                                    @if (repair.PaymentStatus == "Paid")
                                    {
                                        <span class="badge bg-success">Paid</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Unpaid</span>
                                    }
                                </td>
                                <td class="fw-semibold">$@repair.Cost.ToString("F2")</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@repair.Id"
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-secondary print-repair-btn"
                                                data-repair-number="@repair.RepairNumber"
                                                data-customer-name="@repair.CustomerName"
                                                data-customer-phone="@repair.CustomerPhone"
                                                data-device-brand="@repair.DeviceBrand"
                                                data-device-model="@repair.DeviceModel"
                                                data-device-category="@repair.DeviceCategory"
                                                data-issue="@repair.Issue"
                                                data-description="@repair.Description"
                                                data-created-by="@repair.CreatedByUser"
                                                data-created-date="@repair.CreatedDate.ToString("MM/dd/yyyy")"
                                                data-status="@repair.Status"
                                                data-payment-status="@repair.PaymentStatus"
                                                data-cost="@repair.Cost.ToString("F2")">
                                            <i class="fas fa-print"></i>
                                        </button>
                                        @if (Context.Session.GetString("UserRole") == "Manager")
                                        {
                                            <form asp-action="Delete" asp-route-id="@repair.Id" method="post"
                                                  class="d-inline" onsubmit="return confirm('Are you sure you want to delete this repair?')">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-tools fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No repairs found</h5>
                <p class="text-muted">Start by creating your first repair order.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i>
                    Create First Repair
                </a>
            </div>
        }
    </div>
</div>

<!-- Hidden Print Template for Dymo LabelWriter 550 -->
<div id="printTemplate" style="display: none;">
    <div class="dymo-label" >
        <!-- Header Section -->
        <div class="label-header" >
            <div class="company-name"></div>
            <div class="contact-info">
                <span class="company-name home" style="font-weight:bold">EMPIRE PHONE REPAIR - </span>
                <span class="phone">📞 <span id="printShopPhone" style="font-weight:bold"></span> - </span>
                <span id="printCreatedDate" style="font-weight:bold"></span>
            </div>           
        </div>

        <!-- Customer & Device Info -->
        <div class="info-section">
            <div class="info-row">
                <span class="label" style="font-weight:bold">CUSTOMER:</span>
                <span class="value customer-name" id="printCustomerName" style="font-weight:bold"></span>
            </div>
            <div class="info-row">
                <span class="label" style="font-weight:bold">PHONE:</span>
                <span class="value" id="printCustomerPhone" style="font-weight:bold"></span>
            </div>
            <div class="info-row">
                <span class="label" style="font-weight:bold">DEVICE:</span>
                <span class="value" id="printDeviceInfo" style="font-weight:bold"></span>
            </div>
        </div>

        <!-- Issue Section -->
        <div class="issue-section">
            <div class="info-row">
                <span class="label" style="font-weight:bold">ISSUE:</span>
                <span class="value" id="printIssue" style="font-weight:bold"></span>
            </div>
        </div>

        <!-- Status & Payment -->
        <div class="status-section">
            <div class="status-payment-row">
                <div class="status-box">
                    <span class="label" style="font-weight:bold">STATUS:</span>
                    <span class="value status-badge" id="printStatus" style="font-weight:bold"></span>
                </div>
                <div class="payment-box">
                    <span class="label" style="font-weight:bold">PAYMENT:</span>
                    <span class="value payment-badge" id="printPaymentStatus" style="font-weight:bold"></span>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div class="label-footer">
            <div class="dates">
                
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Select2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />

    <!-- Select2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <style>
        /* Dymo LabelWriter 550 Specific Styles */
        /* Label dimensions: 2.4" x 4" (61mm x 102mm) */

        #printTemplate{font-weight: bold;}
        .dymo-label {
            width: 2.4in;
            height: 4in;
            padding-left: 4in;
            font-family: 'Arial', sans-serif;
            font-size: 18pt;
            line-height: 1.2;
            background: white;
            border: 1px solid #ccc;
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
        }

        /* Header Section */
        .label-header {
            border-bottom: 2px solid #000;
            padding-bottom: 0.08in;
            margin-bottom: 0.1in;
        }

        .company-name {
            font-weight: 900;
            font-size: 14pt;
            text-align: center;
            margin-bottom: 0.04in;
            text-transform: uppercase;
            letter-spacing: 1px;
            color: #2c3e50;
        }

        .contact-info {
            display: flex;
            justify-content: space-between;
            font-size: 9pt;
        }

            .contact-info .phone {
                font-weight: 700;
                color: #2c3e50;
            }

            .contact-info .repair-no {
                font-weight: 700;
                color: #e74c3c;
            }

        /* Information Sections */
        .info-section, .issue-section, .status-section {
            margin-bottom: 0.1in;
        }

        .info-row {
            display: flex;
            margin-bottom: 0.06in;
            min-height: 0.2in;
            align-items: flex-start;
        }

            .info-row .label {
                font-weight: bold;
                min-width: 0.8in;
                text-transform: uppercase;
                font-size: 9pt;
                margin-right: 0.08in;
                color: #2c3e50;
            }

            .info-row .value {
                flex: 1;
                word-break: break-word;
                overflow-wrap: break-word;
                font-weight: 400;
                font-size: 11pt;
                color: #34495e;
                font-weight: bold;
            }

                /* Specific style for customer name to ensure it's normal weight */
                .info-row .value.customer-name {
                    font-weight: 400 !important;
                }

        /* Issue Section */
        .issue-section {
            border-top: 1px dashed #95a5a6;
            border-bottom: 1px dashed #95a5a6;
            padding: 0.08in 0;
        }

        /* Status & Payment Section */
        .status-section {
            border-top: 2px solid #000;
            padding-top: 0.08in;
            margin-top: 0.1in;
        }

        .status-payment-row {
            display: flex;
            justify-content: space-between;
            gap: 0.1in;
        }

        .status-box, .payment-box {
            text-align: center;
            flex: 1;
            padding: 0.06in;
        }

            .status-box .label, .payment-box .label {
                display: block;
                font-weight: 800;
                font-size: 8pt;
                text-transform: uppercase;
                margin-bottom: 0.04in;
                color: #2c3e50;
            }

        .status-badge, .payment-badge {
            display: block;
            padding: 0.06in 0.08in;
            border-radius: 0.04in;
            font-size: 9pt;
            font-weight: 700;
            text-transform: uppercase;
        }

        .status-badge {
            background: #3498db;
            color: white;
        }

        .payment-badge.paid {
            background: #27ae60;
            color: white;
        }

        .payment-badge.unpaid {
            background: #e74c3c;
            color: white;
        }

        /* Footer Section */
        .label-footer {
            margin-top: auto;
            border-top: 1px solid #bdc3c7;
            padding-top: 0.08in;
            font-size: 8pt;
            color: #7f8c8d;
            text-align: center;
        }

        /* Enhanced bold styling for all labels */
        .label, .status-box .label, .payment-box .label,
        .contact-info .phone, .contact-info .repair-no {
            font-weight: 800 !important;
        }

        /* Print Specific Styles */
        @@media print {
            body {
               
                background: white !important;
            }

                body * {
                    visibility: hidden;
                }

            .dymo-label,
            .dymo-label * {
                visibility: visible;
            }

            .dymo-label {
                position: absolute;
                padding-left: 30pt !important;
                top: 0;
                width: 2.4in;
                height: 4in;
                margin: 0;
                padding: 0.12in;
                box-shadow: none;
                border: none;
                font-size:18pt;
                font-weight:bold;
            }
            /* Hide unnecessary elements in print */
            .no-print {
                display: none !important;
            }
        }

        /* Screen preview styles */
        @@media screen {
            .dymo-label {
                margin: 20px auto;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
        }
    </style>

    <script>
        // Store shop phone for print function
        var shopPhone = '@ViewBag.ShopPhone';
        let repairsTable;

        $(document).ready(function() {
            // Initialize DataTable for repairs table
            repairsTable = $('#repairsTable').DataTable({
                responsive: true,
                pageLength: 25,
                order: [[3, 'desc']], // Sort by Repair Details/Created Date (column index 3)
                columnDefs: [
                    { orderable: false, targets: [7] } // Disable sorting on actions column
                ]
            });

            // Hide PickedUp records by default
            $.fn.dataTable.ext.search.push(
                function(settings, data, dataIndex) {
                    // Get the row element
                    var row = repairsTable.row(dataIndex).node();
                    var status = $(row).data('status');
                    
                    // If there's an active filter from the filter form, don't apply this default filter
                    var statusFilter = $('#status').val();
                    if (statusFilter !== '') {
                        return true; // Show all records when filter is active
                    }
                    
                    // Hide PickedUp records by default
                    return status !== 'PickedUp';
                }
            );
            
            // Apply the filter
            repairsTable.draw();

            // Initialize Select2 for filter dropdowns
            $('#brandFilter, #deviceCategoryFilter').select2({
                theme: 'bootstrap-5',
                allowClear: true
            });

            // Load filter data
            loadBrands();
            loadDeviceCategories();

            // Initialize print buttons
            initializePrintButtons();

            // Add change event handler for status filter to redraw table
            $('#status').on('change', function() {
                repairsTable.draw();
            });
        });

        function loadBrands() {
            var url = '@Url.Action("GetBrands", "Repairs")';
            $.get(url, function(response) {
                if (response.success) {
                    const brandSelect = $('#brandFilter');
                    brandSelect.empty().append('<option value="">All Brands</option>');

                    response.data.forEach(function(brand) {
                        brandSelect.append('<option value="' + brand.id + '">' + brand.name + '</option>');
                    });
                }
            });
        }

        function loadDeviceCategories() {
            var url = '@Url.Action("GetDeviceCategories", "Repairs")';
            $.get(url, function(response) {
                if (response.success) {
                    const categorySelect = $('#deviceCategoryFilter');
                    categorySelect.empty().append('<option value="">All Categories</option>');

                    response.data.forEach(function(category) {
                        categorySelect.append('<option value="' + category.id + '">' + category.name + '</option>');
                    });
                }
            });
        }

        // PRINT FUNCTION FOR DYMO LABEL
        function initializePrintButtons() {
            $('.print-repair-btn').click(function() {
                var $btn = $(this);

                // Get all repair data from button attributes
                var repairData = {
                    number: $btn.data('repair-number'),
                    customerName: $btn.data('customer-name'),
                    customerPhone: $btn.data('customer-phone'),
                    deviceBrand: $btn.data('device-brand'),
                    deviceModel: $btn.data('device-model'),
                    deviceCategory: $btn.data('device-category'),
                    issue: $btn.data('issue'),
                    description: $btn.data('description'),
                    createdBy: $btn.data('created-by'),
                    createdDate: $btn.data('created-date'),
                    status: $btn.data('status'),
                    paymentStatus: $btn.data('payment-status'),
                    cost: $btn.data('cost')
                };

                // Update the hidden print template with current data
                document.getElementById('printShopPhone').textContent = shopPhone;
                document.getElementById('printCustomerName').textContent = repairData.customerName;
                document.getElementById('printCustomerPhone').textContent = repairData.customerPhone || 'N/A';

                // Build device info string
                var deviceInfo = repairData.deviceBrand + ' ' + repairData.deviceModel;
                if (repairData.deviceCategory) {
                    deviceInfo += ' (' + repairData.deviceCategory + ')';
                }
                document.getElementById('printDeviceInfo').textContent = deviceInfo;

                document.getElementById('printIssue').textContent = repairData.issue;
                document.getElementById('printCreatedDate').textContent = repairData.createdDate;

                // Set status with appropriate styling
                var statusElement = document.getElementById('printStatus');
                statusElement.textContent = repairData.status;

                // Set payment status with appropriate styling
                var paymentElement = document.getElementById('printPaymentStatus');
                paymentElement.textContent = repairData.paymentStatus;
                paymentElement.className = 'payment-badge ' + repairData.paymentStatus.toLowerCase();

                // Get the print content from hidden div
                const printContent = document.getElementById('printTemplate').innerHTML;
                const originalContent = document.body.innerHTML;

                // Replace body content with print content
                document.body.innerHTML = printContent;

                // Trigger print
                window.print();

                // Restore original content
                document.body.innerHTML = originalContent;

                // Re-initialize events since we replaced the entire body
                initializePrintButtons();
            });
        }
    </script>
}
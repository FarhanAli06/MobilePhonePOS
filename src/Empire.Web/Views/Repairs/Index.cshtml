@model RepairIndexViewModel
@{
    ViewData["Title"] = "Repairs";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">
        <i class="fas fa-tools me-2"></i>
        Repair Management
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i>
                New Repair
            </a>
        </div>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Filters -->
<div class="card mb-4">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary">
            <i class="fas fa-filter me-2"></i>
            Filters
        </h6>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index">
            <div class="row">
                <div class="col-md-2 mb-3">
                    <label for="searchTerm" class="form-label">Search</label>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Search repairs...">
                </div>
                
                <div class="col-md-2 mb-3">
                    <label for="brandFilter" class="form-label">Brand</label>
                    <select id="brandFilter" name="brandId" class="form-select">
                        <option value="">All Brands</option>
                    </select>
                </div>
                
                <div class="col-md-2 mb-3">
                    <label for="deviceCategoryFilter" class="form-label">Device Category</label>
                    <select id="deviceCategoryFilter" name="deviceCategoryId" class="form-select">
                        <option value="">All Categories</option>
                    </select>
                </div>
                
                <div class="col-md-1 mb-3">
                    <label for="status" class="form-label">Status</label>
                    <select class="form-select" id="status" name="status">
                        <option value="">All Status</option>
                        <option value="InProgress" selected="@(Model.Status == "InProgress")">In Progress</option>
                        <option value="Complete" selected="@(Model.Status == "Complete")">Complete</option>
                        <option value="Done" selected="@(Model.Status == "Done")">Done</option>
                    </select>
                </div>
                
                <div class="col-md-1 mb-3">
                    <label for="paymentStatus" class="form-label">Payment</label>
                    <select class="form-select" id="paymentStatus" name="paymentStatus">
                        <option value="">All Payments</option>
                        <option value="Paid" selected="@(Model.PaymentStatus == "Paid")">Paid</option>
                        <option value="Unpaid" selected="@(Model.PaymentStatus == "Unpaid")">Unpaid</option>
                    </select>
                </div>
                
                <div class="col-md-2 mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" class="form-control" id="startDate" name="startDate" 
                           value="@Model.StartDate?.ToString("yyyy-MM-dd")">
                </div>
                
                <div class="col-md-2 mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" class="form-control" id="endDate" name="endDate" 
                           value="@Model.EndDate?.ToString("yyyy-MM-dd")">
                </div>
                
                <div class="col-md-1 mb-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Repairs Table -->
<div class="card">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary">
            Repairs (@Model.Repairs.Count())
        </h6>
    </div>
    <div class="card-body">
        @if (Model.Repairs.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Customer</th>
                            <th>Device</th>
                            <th>Issue</th>
                            <th>Repair Details</th>
                            <th>Status</th>
                            <th>Payment</th>
                            <th>Cost</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var repair in Model.Repairs)
                        {
                            <tr>
                                <td>
                                    <div>@repair.CustomerName</div>
                                    <small class="text-muted">@repair.CustomerPhone</small>
                                </td>
                                <td>
                                    <div>@repair.DeviceBrand @repair.DeviceModel</div>
                                    @if (!string.IsNullOrEmpty(repair.DeviceCategory))
                                    {
                                        <small class="text-muted">@repair.DeviceCategory</small>
                                    }
                                </td>
                                <td>
                                    <div>@repair.Issue</div>
                                    @if (!string.IsNullOrEmpty(repair.Description))
                                    {
                                        <small class="text-muted">@repair.Description</small>
                                    }
                                </td>
                                <td>
                                    <div class="fw-semibold">@repair.RepairNumber</div>
                                    <div class="text-muted">@repair.CreatedByUser | @repair.CreatedDate.ToString("MM/dd/yyyy HH:mm")</div>
                                </td>
                                <td>
                                @switch (repair.Status)
                                {
                                    case "Diagnose":
                                        <span class="badge bg-info">Diagnose</span>
                                        break;
                                    case "WaitingForParts":
                                        <span class="badge bg-warning">Waiting for Parts</span>
                                        break;
                                    case "InProgress":
                                        <span class="badge bg-primary">In Progress</span>
                                        break;
                                    case "Completed":
                                    case "Complete":
                                        <span class="badge bg-success">Complete</span>
                                        break;
                                    case "PickedUp":
                                        <span class="badge bg-success">Picked Up</span>
                                        break;
                                    case "Done":
                                        <span class="badge bg-success">Picked Up</span>
                                        break;
                                    default:
                                        <span class="badge bg-secondary">@repair.Status</span>
                                        break;
                                }
                                </td>
                                <td>
                                    @if (repair.PaymentStatus == "Paid")
                                    {
                                        <span class="badge bg-success">Paid</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Unpaid</span>
                                    }
                                </td>
                                <td class="fw-semibold">$@repair.Cost.ToString("F2")</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@repair.Id" 
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-secondary print-repair-btn" 
                                                data-repair-id="@repair.Id"
                                                data-repair-number="@repair.RepairNumber"
                                                data-customer-name="@repair.CustomerName"
                                                data-device-name="@repair.DeviceBrand @repair.DeviceModel"
                                                data-issue="@repair.Issue"
                                                data-created-by="@repair.CreatedByUser"
                                                data-created-date="@repair.CreatedDate.ToString("MM/dd/yyyy HH:mm")">
                                            <i class="fas fa-print"></i>
                                        </button>
                                        @if (Context.Session.GetString("UserRole") == "Manager")
                                        {
                                            <form asp-action="Delete" asp-route-id="@repair.Id" method="post" 
                                                  class="d-inline" onsubmit="return confirm('Are you sure you want to delete this repair?')">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-tools fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No repairs found</h5>
                <p class="text-muted">Start by creating your first repair order.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i>
                    Create First Repair
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <!-- Select2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    
    <!-- Select2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    
    <script>
        $(document).ready(function() {
            // Initialize Select2 for filter dropdowns
            $('#brandFilter, #deviceCategoryFilter').select2({
                theme: 'bootstrap-5',
                allowClear: true
            });
            
            // Load filter data
            loadBrands();
            loadDeviceCategories();
        });
        
        function loadBrands() {
            var url = '@Url.Action("GetBrands", "Repairs")';
            $.get(url, function(response) {
                if (response.success) {
                    const brandSelect = $('#brandFilter');
                    const currentValue = brandSelect.data('current-value') || '';
                    
                    brandSelect.empty().append('<option value="">All Brands</option>');
                    
                    response.data.forEach(function(brand) {
                        const selected = brand.id == currentValue ? 'selected' : '';
                        brandSelect.append('<option value="' + brand.id + '" ' + selected + '>' + brand.name + '</option>');
                    });
                    
                    console.log('Loaded ' + response.data.length + ' brands for filter');
                } else {
                    console.error('Failed to load brands:', response.message);
                }
            }).fail(function(xhr, status, error) {
                console.error('Error loading brands:', error);
            });
        }
        
        function loadDeviceCategories() {
            var url = '@Url.Action("GetDeviceCategories", "Repairs")';
            $.get(url, function(response) {
                if (response.success) {
                    const categorySelect = $('#deviceCategoryFilter');
                    const currentValue = categorySelect.data('current-value') || '';
                    
                    categorySelect.empty().append('<option value="">All Categories</option>');
                    
                    response.data.forEach(function(category) {
                        const selected = category.id == currentValue ? 'selected' : '';
                        categorySelect.append('<option value="' + category.id + '" ' + selected + '>' + category.name + '</option>');
                    });
                    
                    console.log('Loaded ' + response.data.length + ' device categories for filter');
                } else {
                    console.error('Failed to load device categories:', response.message);
                }
            }).fail(function(xhr, status, error) {
                console.error('Error loading device categories:', error);
            });
        }
        
        // Print Repair Function - Robust implementation
        function initializePrintButtons() {
            $('.print-repair-btn').off('click').on('click', function(e) {
                e.preventDefault();
                
                try {
                    var btn = $(this);
                    
                    // Get data from button attributes with fallbacks
                    var repairNumber = btn.attr('data-repair-number') || 'N/A';
                    var customerName = btn.attr('data-customer-name') || 'N/A';
                    var deviceName = btn.attr('data-device-name') || 'N/A';
                    var issue = btn.attr('data-issue') || 'N/A';
                    var createdBy = btn.attr('data-created-by') || 'Unknown';
                    var createdDate = btn.attr('data-created-date') || '';
                    
                    // Escape HTML special characters to prevent XSS and formatting issues
                    function escapeHtml(text) {
                        if (!text) return '';
                        var div = document.createElement('div');
                        div.textContent = text;
                        return div.innerHTML;
                    }
                    
                    // Escape all values
                    repairNumber = escapeHtml(repairNumber);
                    customerName = escapeHtml(customerName);
                    deviceName = escapeHtml(deviceName);
                    issue = escapeHtml(issue);
                    createdBy = escapeHtml(createdBy);
                    createdDate = escapeHtml(createdDate);
                    
                    // Open print window
                    var printWindow = window.open('', '_blank', 'width=800,height=600');
                    
                    if (!printWindow) {
                        alert('Please allow popups for this site to use the print function.');
                        return;
                    }
                    
                    // Build HTML content using string concatenation (no template literals)
                    var html = '<!DOCTYPE html>';
                    html += '<html>';
                    html += '<head>';
                    html += '<meta charset="UTF-8">';
                    html += '<title>Repair Details - ' + repairNumber + '</title>';
                    html += '<style>';
                    html += 'body { font-family: Arial, sans-serif; padding: 40px; margin: 0; }';
                    html += 'h1 { color: #333; border-bottom: 2px solid #667eea; padding-bottom: 10px; margin-bottom: 10px; font-size: 24px; }';
                    html += '.header-info { font-size: 16px; color: #666; margin-bottom: 30px; font-weight: normal; }';
                    html += '.detail { margin: 30px 0; }';
                    html += '.label { font-weight: bold; color: #444; margin-bottom: 8px; font-size: 20px; text-transform: uppercase; letter-spacing: 0.5px; }';
                    html += '.value { color: #333; font-size: 34px; line-height: 1.2; font-weight: bold; word-wrap: break-word; }';
                    html += '.print-btn { padding: 10px 20px; background: #667eea; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; margin-top: 20px; }';
                    html += '.print-btn:hover { background: #5568d3; }';
                    html += '</style>';
                    html += '</head>';
                    html += '<body>';
                    html += '<h1>Repair Details - ' + repairNumber + '</h1>';
                    
                    // Only show created by info if we have a date
                    if (createdDate) {
                        html += '<div class="header-info">Created by: ' + createdBy + ' | ' + createdDate + '</div>';
                    }
                    
                    html += '<div class="detail">';
                    html += '<div class="label">Customer Name:</div>';
                    html += '<div class="value">' + customerName + '</div>';
                    html += '</div>';
                    
                    html += '<div class="detail">';
                    html += '<div class="label">Device:</div>';
                    html += '<div class="value">' + deviceName + '</div>';
                    html += '</div>';
                    
                    html += '<div class="detail">';
                    html += '<div class="label">Issue:</div>';
                    html += '<div class="value">' + issue + '</div>';
                    html += '</div>';
                    
                    html += '<button class="print-btn" onclick="window.print();">Print</button>';
                    html += '</body>';
                    html += '</html>';
                    
                    // Write content to print window
                    printWindow.document.open();
                    printWindow.document.write(html);
                    printWindow.document.close();
                    
                    // Focus the print window
                    printWindow.focus();
                    
                    console.log('Print window opened successfully for repair:', repairNumber);
                    
                } catch (error) {
                    console.error('Error opening print window:', error);
                    alert('An error occurred while opening the print window. Please try again.');
                }
            });
        }
        
        // Initialize print buttons when document is ready
        $(document).ready(function() {
            initializePrintButtons();
            console.log('Print buttons initialized');
        });
    </script>
}

